//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace net.paxialabs.mabe.serviplus.data.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_PaxiaLabs_ServiplusEntities : DbContext
    {
        public db_PaxiaLabs_ServiplusEntities()
            : base("name=db_PaxiaLabs_ServiplusEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BuildOfMaterials> BuildOfMaterials { get; set; }
        public virtual DbSet<CauseOrder> CauseOrder { get; set; }
        public virtual DbSet<CauseVisit> CauseVisit { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<CodeFailure> CodeFailure { get; set; }
        public virtual DbSet<CodeFailureByProduct> CodeFailureByProduct { get; set; }
        public virtual DbSet<Countries> Countries { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Guaranty> Guaranty { get; set; }
        public virtual DbSet<GuarantyType> GuarantyType { get; set; }
        public virtual DbSet<InstalledBase> InstalledBase { get; set; }
        public virtual DbSet<ModelSerialNumber> ModelSerialNumber { get; set; }
        public virtual DbSet<ModuleMabe> ModuleMabe { get; set; }
        public virtual DbSet<Prices> Prices { get; set; }
        public virtual DbSet<Priority> Priority { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<Quotation> Quotation { get; set; }
        public virtual DbSet<QuotationDetail> QuotationDetail { get; set; }
        public virtual DbSet<Schedule> Schedule { get; set; }
        public virtual DbSet<ShopPlace> ShopPlace { get; set; }
        public virtual DbSet<States> States { get; set; }
        public virtual DbSet<StatusOrder> StatusOrder { get; set; }
        public virtual DbSet<StatusScheme> StatusScheme { get; set; }
        public virtual DbSet<StatusVisit> StatusVisit { get; set; }
        public virtual DbSet<TypeQuotation> TypeQuotation { get; set; }
        public virtual DbSet<ValidationGuarantyBOM> ValidationGuarantyBOM { get; set; }
        public virtual DbSet<ValidationGuarantyProduct> ValidationGuarantyProduct { get; set; }
        public virtual DbSet<ValidationsSerialNumber> ValidationsSerialNumber { get; set; }
        public virtual DbSet<Workforce> Workforce { get; set; }
        public virtual DbSet<Configuration> Configuration { get; set; }
        public virtual DbSet<Message> Message { get; set; }
        public virtual DbSet<Receivers> Receivers { get; set; }
        public virtual DbSet<ContratReceipt> ContratReceipt { get; set; }
        public virtual DbSet<Evidence> Evidence { get; set; }
        public virtual DbSet<History> History { get; set; }
        public virtual DbSet<Invoice> Invoice { get; set; }
        public virtual DbSet<LogCRM> LogCRM { get; set; }
        public virtual DbSet<MonitorOrders> MonitorOrders { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<Payment> Payment { get; set; }
        public virtual DbSet<Policy> Policy { get; set; }
        public virtual DbSet<RefSell> RefSell { get; set; }
        public virtual DbSet<RefsellQuotation> RefsellQuotation { get; set; }
        public virtual DbSet<SpareParts> SpareParts { get; set; }
        public virtual DbSet<BOM> BOM { get; set; }
        public virtual DbSet<CifrasControl> CifrasControl { get; set; }
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Fallas> Fallas { get; set; }
        public virtual DbSet<InterfaceLog> InterfaceLog { get; set; }
        public virtual DbSet<LugarCompra> LugarCompra { get; set; }
        public virtual DbSet<ODS> ODS { get; set; }
        public virtual DbSet<PRECIOS> PRECIOS { get; set; }
        public virtual DbSet<PTRef> PTRef { get; set; }
        public virtual DbSet<REFACCIONES> REFACCIONES { get; set; }
        public virtual DbSet<REFMAN> REFMAN { get; set; }
        public virtual DbSet<Resumen> Resumen { get; set; }
        public virtual DbSet<Audit> Audit { get; set; }
        public virtual DbSet<DevicePhone> DevicePhone { get; set; }
        public virtual DbSet<DevicePhoneUser> DevicePhoneUser { get; set; }
        public virtual DbSet<LogMobile> LogMobile { get; set; }
        public virtual DbSet<MobileSync> MobileSync { get; set; }
        public virtual DbSet<Module> Module { get; set; }
        public virtual DbSet<Permission> Permission { get; set; }
        public virtual DbSet<Profile> Profile { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<BlackList> BlackList { get; set; }
    
        public virtual int sp_exe_Interface()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_exe_Interface");
        }
    
        public virtual ObjectResult<sp_get_Quotation_Result1> sp_get_Quotation(string statusVisitID, string moduleID, string priorityID, string statusOrderID, string serviceID, string orderID, string employee, string startDate, string endDate, string user, string typeQuatation)
        {
            var statusVisitIDParameter = statusVisitID != null ?
                new ObjectParameter("StatusVisitID", statusVisitID) :
                new ObjectParameter("StatusVisitID", typeof(string));
    
            var moduleIDParameter = moduleID != null ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(string));
    
            var priorityIDParameter = priorityID != null ?
                new ObjectParameter("PriorityID", priorityID) :
                new ObjectParameter("PriorityID", typeof(string));
    
            var statusOrderIDParameter = statusOrderID != null ?
                new ObjectParameter("StatusOrderID", statusOrderID) :
                new ObjectParameter("StatusOrderID", typeof(string));
    
            var serviceIDParameter = serviceID != null ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(string));
    
            var orderIDParameter = orderID != null ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(string));
    
            var employeeParameter = employee != null ?
                new ObjectParameter("Employee", employee) :
                new ObjectParameter("Employee", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var typeQuatationParameter = typeQuatation != null ?
                new ObjectParameter("TypeQuatation", typeQuatation) :
                new ObjectParameter("TypeQuatation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_Quotation_Result1>("sp_get_Quotation", statusVisitIDParameter, moduleIDParameter, priorityIDParameter, statusOrderIDParameter, serviceIDParameter, orderIDParameter, employeeParameter, startDateParameter, endDateParameter, userParameter, typeQuatationParameter);
        }
    
        [DbFunction("db_PaxiaLabs_ServiplusEntities", "HProduct")]
        public virtual IQueryable<HProduct_Result> HProduct(Nullable<int> pK_OrderID)
        {
            var pK_OrderIDParameter = pK_OrderID.HasValue ?
                new ObjectParameter("PK_OrderID", pK_OrderID) :
                new ObjectParameter("PK_OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HProduct_Result>("[db_PaxiaLabs_ServiplusEntities].[HProduct](@PK_OrderID)", pK_OrderIDParameter);
        }
    }
}
