@(Html.Kendo().Grid<net.paxialabs.mabe.serviplus.entities.ModelView.Operation.ModelViewQuotation>()
    .Name("grid")
    .EnableCustomBinding(true)
    .Columns(columns =>
    {
        columns.Bound(o => o.OrderID).Title("Nº de ODS").Width("100px").Filterable(f => f.Operators(ft => ft.ForString(o => { o.Clear(); o.Contains("Contiene"); o.StartsWith("Inicia con"); })));
        columns.Bound(o => o.StatusQuotation).Title("Estatus").Width("100px").Filterable(f => f.Operators(ft => ft.ForString(o => { o.Clear(); o.Contains("Contiene"); o.StartsWith("Inicia con"); })));
        columns.Bound(o => o.Folio).Title("Folio de Cotización").Width("100px").Filterable(f => f.Operators(ft => ft.ForString(o => { o.Clear(); o.Contains("Contiene"); o.StartsWith("Inicia con"); })));
        columns.Bound(o => o.ClientName).Title("Nombre del Cliente").Width("200px").Filterable(f => f.Operators(ft => ft.ForString(o => { o.Clear(); o.Contains("Contiene"); o.StartsWith("Inicia con"); })));
        columns.Bound(o => o.EmployeeName).Title("Nombre del Técnico de Servicio").Width("200px").Filterable(f => f.Operators(ft => ft.ForString(o => { o.Clear(); o.Contains("Contiene"); o.StartsWith("Inicia con"); })));
        columns.Bound(o => o.Total).Title("Total Cotizado").Width("100px").Filterable(f => f.Operators(ft => ft.ForString(o => { o.Clear(); o.Contains("Contiene"); o.StartsWith("Inicia con"); })));
        columns.Command(command => command.Custom("Ver").Click("showDetails")).Title("Documento").Width(180);
    })
    //.Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
    .Resizable(resize => resize.Columns(true))
    .Pageable(p => p.ButtonCount(5).PageSizes(true).Refresh(true).Messages(m => m.ItemsPerPage("Elementos por Página")).Messages(m => m.Display("Elementos Mostrados {0}-{1} de {2}")))
    .Sortable()
    .HtmlAttributes(new { style = "height: 350px" })
    .Scrollable(scrolling => scrolling.Enabled(true))
    .Events(events => events.DataBound("gridDataBound"))
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Read(read => read.Action("GetListAllQuotation", "Quotation").Data("filterData"))
        .PageSize(15)
        .ServerOperation(true)
        .Events(e => e.Error("error_handler"))
    )
)

@(Html.Kendo().Dialog()
        .Name("dialogDetail")
        .Title("Serviplus - Cotización")
        .Content("")
        .Width(800)
        .Height(650)
        .Modal(true)
        .Visible(false)
)

@(Html.Kendo().Dialog()
        .Name("dialogPriorityDetail")
        .Title("Serviplus")
        .Content("")
        .Width(400)
        .Modal(true)
        .Visible(false)
)


<script>

    function gridDataBound(e) {
        var grid = e.sender;
        if (grid.dataSource.total() == 0) {
            var dialog = $('#dialogPriorityDetail').data("kendoDialog");
            $('#dialogPriorityDetail').parent().find('.k-dialog-title').css(' font-size', 'bold');
            dialog.content('No se encontraron datos para mostrar.');
            dialog.open();
            e.sender.pager.options.messages.empty = 'No se encontraron datos para mostrar.';
        }
    }

    function error_handler(e) {
        //alert('No cuenta con permisos suficientes.');
    }

    function filterData() {
        return {};
    }
    function showDetails(e) {

        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        dataItem.URL
        //http://vmpaxiadev01.cloudapp.net:9200/Content/Attachments/13072017_211519Cotizaci%C3%B3n.pdf
        var dialog = $('#dialogDetail').data("kendoDialog");
        $('#dialogDetail').parent().find('.k-dialog-title').css(' font-size', 'bold');
        var x = "<object data=" + dataItem.URL +  " type='application/pdf' width='770px' height='550px' />"
        dialog.content(x);
        dialog.open();

    }
</script>

