

@model net.paxialabs.mabe.serviplus.entities.ModelView.Operation.ModelViewPriority
@{
    Layout = null;
}

@*@using (Html.BeginForm())
{

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ScheduleID)

    <br />
    <div class="row">
        <fieldset>
            <div class="col-md-4 col-md-offset-4 col-sm-8 col-sm-offset-2">
                @*<div class="form-group">
                        @Html.LabelFor(model => model.ScheduleID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ScheduleID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ScheduleID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                <div class="form-group">
                    @Html.Label("Descripcion")
                    <div>
                        @Html.DropDownListFor(model => model.PriorityID, new SelectList(ViewBag.lstPriority, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PriorityID, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                <div class="form-group">
                    @Html.Label("Inicio")
                    <div>
                        @Html.EditorFor(model => model.ScheduleStart, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ScheduleStart, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Fin")
                    <div>
                        @Html.EditorFor(model => model.ScheduleEnd, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ScheduleEnd, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <center>
                        <div>
                            <input type="submit" id="btnGuardar" value="Guardar" class="btn btn-unauth" />
                            <input type="button" id="btnCancelar" value="Cancelar" class="btn btn-danger" />
                        </div>
                    </center>
                </div>
            </div>
        </fieldset>
    </div>
}*@



@using (Html.BeginForm("", "#", FormMethod.Post, new { id = "frmPriority", @class = "form-horizontal" }))
{
    @Html.HiddenFor(model => model.ScheduleID)

    <div class="col-md-4 col-md-offset-4 col-sm-8 col-sm-offset-2">
        <br>
        <div class="form-group">
            <div class="col-md-8 col-md-offset-2">
                @Html.DropDownListFor(model => model.PriorityID, new SelectList(ViewBag.lstPriority, "Value", "Text"), new { @class = "form-control input-sm" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-8 col-md-offset-2">
                <input type="text" class="form-control input-sm" id="ScheduleStart" name="ScheduleStart" placeholder="Inicio">
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-8 col-md-offset-2">
                <input type="text" class="form-control input-sm" id="ScheduleEnd" name="ScheduleEnd" placeholder="Fin">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-8 col-md-offset-2">
                <center>
                    <input type="submit" id="btnGuardar" value="Guardar" class="btn btn-unauth" />
                    <input type="button" id="btnCancelar" value="Cancelar" class="btn btn-danger" />
                </center>
            </div>
        </div>
    </div>

}



        @(Html.Kendo().Dialog()
            .Name("dialogPriorityDetail")
            .Title("Serviplus")
            .Content("")
        .Width(400)
        .Modal(true)
        .Visible(false)
        .Actions(actions =>
        {
            actions.Add().Text("<button class='btn btn-confirmar'>Aceptar</button>");
        })
        .Events(ev => ev.Close("onClose").Open("onOpen"))
        )



        <script>
            $(document).ready(function () {
                $('[class="btn btn-default"]').tooltip();

                $('#frmPriority').bootstrapValidator({
                    message: 'Envio de formulario',
                    excluded: [':disabled'],
                    feedbackIcons: {
                        valid: 'glyphicon glyphicon-ok',
                        invalid: 'glyphicon glyphicon-remove',
                        validating: 'glyphicon glyphicon-refresh'
                    },
                    fields: {
                        ScheduleStart: {
                            container: 'tooltip',
                            validators: {
                                notEmpty: {
                                    message: 'Este campo es requerido.'
                                },
                            }
                        },
                        ScheduleEnd: {
                            container: 'tooltip',
                            validators: {
                                notEmpty: {
                                    message: 'Este campo es requerido.'
                                },
                            }
                        }
                    }
                })
                    .on('status.field.bv', function (e, data) {
                        var $form = $(e.target),
                            validator = data.bv,
                            $tabPane = data.element.parents('.tab-pane'),
                            tabId = $tabPane.attr('id');

                        if (tabId) {
                            var $icon = $('a[href="#' + tabId + '"][data-toggle="tab"]').parent().find('i');
                            // Add custom class to tab containing the field
                            if (data.status == validator.STATUS_INVALID) {
                                $icon.removeClass(faIcon.valid).addClass(faIcon.invalid);
                            } else if (data.status == validator.STATUS_VALID) {
                                var isValidTab = validator.isValidContainer($tabPane);
                                $icon.removeClass(faIcon.valid).addClass(isValidTab ? faIcon.valid : faIcon.invalid);
                            }
                        }
                    }).on('success.form.bv', function (e, data) {
                        // Prevent form submission
                        e.preventDefault();

                        var online = navigator.onLine;
                        if (!online) {
                            bootbox.alert('');
                            return false;
                        }

                        var PriorityID = document.getElementById("PriorityID").value;
                        var ScheduleStart = document.getElementById("ScheduleStart").value;
                        var ScheduleEnd = document.getElementById("ScheduleEnd").value;
                        var ScheduleID = document.getElementById("ScheduleID").value;
                        if (ScheduleID == "" || ScheduleID == null)
                        {
                            ScheduleID = 0
                        }
                        var model = { PriorityID: PriorityID, ScheduleID: ScheduleID, Priority: PriorityID, Status:true, ScheduleStart: ScheduleStart, ScheduleEnd: ScheduleEnd }
      
                        $.ajax({
                            url: '../Priority/savePriority',
                            type: "POST",
                            cache: false,
                            data: { modelo: JSON.stringify(model) },
                            beforeSend: function (jqXHR, settings) { $("#divLoading").show(); },
                            error: function (jqXHR, textStatus, errorThrown) { $("#divLoading").hide(); },
                            complete: function (jqXHR, textStatus) { ; },
                            success: function (result) {

                                $("#divLoading").hide();
                                //$("#divModal").modal('toggle');

                                if (result == "Unauthorized") {
                                    showDialog('No cuenta con permisos suficientes.');
                                } else {
                                    showDialog('Su solicitud se proceso con éxito.');
                                }

                                var grid = $("#grid").data("kendoGrid");
                                grid.dataSource.read();
                            }
                        });
                    });
            });



            //$("form").on("submit", function (event) {
            //    event.preventDefault();

            //    $.ajax({
            //        url: '../Priority/savePriority',
            //        type: "POST",
            //        cache: false,
            //        data: $(this).serialize(),
            //        beforeSend: function (jqXHR, settings) { /*$("#divLoading").show();*/ },
            //        error: function (jqXHR, textStatus, errorThrown) { /*$("#divLoading").hide();*/ },
            //        complete: function (jqXHR, textStatus) { ; },
            //        success: function (result) {

            //            if (result == "Unauthorized") {
            //                showDialog('No cuenta con permisos suficientes.');
            //            } else {
            //                showDialog('Su solicitud se proceso con éxito.');
            //            }
            //            var grid = $("#grid").data("kendoGrid");
            //            grid.dataSource.read();
            //        }
            //    });
            //});

            $("#btnCancelar").click(function () {

                $("#frmPriority").validate().resetForm();
                $("#frmPriority").find('.has-error').removeClass("has-error");
                $("#frmPriority").find('.has-success').removeClass("has-success");
                $('#frmPriority').find('.form-control-feedback').remove()

                $("#PriorityID").val("0");
                $("#ScheduleStart").val("");
                $("#ScheduleEnd").val("");
                var splitter = $("#splitter").data("kendoSplitter");
                splitter.expand("#left-pane");
                splitter.collapse("#right-pane");
            });

            function onClose() {

            }

            function onOpen() {

            }

            function showDialog(msg) {

                var dialog = $('#dialogPriorityDetail').data("kendoDialog");
                dialog.content(msg);
                dialog.open();
            }
        </script>
