<div class="row">

        <fieldset>
            <div class="col-md-4 col-md-offset-4 col-sm-8 col-sm-offset-2">
                <legend>Técnicos</legend>
                @*<button type="button" id="btnColapsT" class="btn btn-default btn-xs"><span class="glyphicon glyphicon-collapse-up" aria-hidden="true"></span></button>

            <button type="button" id="btnColapsDownT" class="btn btn-default btn-xs"><span class="glyphicon glyphicon-collapse-down" aria-hidden="true"></span></button>*@

                <div id="Tree">
                    <div>
                        <ul id="User" style="text-align:initial"></ul>
                    </div>
                </div>
            </div>
</fieldset>
  
</div>

    <script>

        $(document).ready(function () {
            BuildTree();
        });

        function BuildTree() {
            $.ajax({
                url: '/Notification/GetUserAll_Actives',
                type: "POST",
                cache: false,
                //error: function (jqXHR, textStatus, errorThrown) {
                //    //$("#divLoading").hide();
                //    },
                error: function () { alert("error"); },
                //complete: function (jqXHR, textStatus) {; },
                success: function (result) {
                    //StructureTypes = result;
                    //alert(JSON.stringify(result))
                    BuildComboTree(result);
                }
            });
        }

        //este metodo construye el arbol
        function BuildComboTree(json) {
            //alert(JSON.stringify(json))
            document.getElementById('Tree').innerHTML = " <ul id='Users' style='text-align:initial'></ul> ";
            $ulUser = $('#Users');
            $.each(json, function (i, item) {
                //alert(JSON.stringify(item.Name))
                var $li;
                $li = $('<li/>').html("<input type='Checkbox' value=" + item.UserID + " id=" + item.UserID + "> " + item.Name);
                $li.attr("data-expanded", "true");
                $ulUser.append($li);

                //if (item.OrganizationalStructureFatherID == 0) {
                //    //alert("Entra");
                //    var $li;
                //    if (item.OrganizationStructureTypeID == 0) {
                //        alert(item.OrganizationStructureTypeID);
                //        $li = $('<li/>').html(item.OrganizationalStructureName);
                //    }
                //    else {
                //        $li = $('<li/>').html("<input type='Checkbox' value=" + item.OrganizationalStructureID + " id=" + item.OrganizationStructureTypeID + "> "
                //            + item.OrganizationalStructureName);
                //    }
                //    $li.attr("data-expanded", "true");
                //    $ulOrganizationalStructure.append($li);
                //    AddOrganizationalStructuresChild($li, jsonOrganizationalStructure, item.OrganizationalStructureID);
                //}
            });


            //function AddOrganizationalStructuresChild(liPadre, jsonOrganizationalStructure, OrganizationalStructureID) {
            //    var $ul = $('<ul/>');

            //    $.each(jsonOrganizationalStructure, function (i, item) {

            //        if (item.OrganizationalStructureFatherID == OrganizationalStructureID && (item.OrganizationalStructureFatherID != 0)) {
            //            var $li;
            //            if (item.OrganizationStructureTypeID == 0) {
            //                $li = $('<li/>').html(item.OrganizationalStructureName);
            //            }
            //            else {
            //                $li = $('<li/>').html("<input type='Checkbox' value=" + item.OrganizationalStructureID + " id=" + item.OrganizationStructureTypeID + "> "
            //                    //+ item.OrganizationalStructureID + " - "
            //                    + item.OrganizationalStructureName);
            //            }

            //            $ul.append($li);
            //            liPadre.append($ul);
            //            liPadre.attr("data-expanded", "true");
            //            AddOrganizationalStructuresChild($li, jsonOrganizationalStructure, item.OrganizationalStructureID);
            //        }
            //    });
            //}

            var treeview = $("#Users").kendoTreeView({

                //check: onCheck,
                //   select: onSelect
            }).data("kendoTreeView");

            treeview.collapse(".k-item");

            //CheckUsers();
        }


    </script>
